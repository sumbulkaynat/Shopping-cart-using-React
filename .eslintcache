[{"/Users/sumbulkaynat/Desktop/React/cart/src/index.js":"1","/Users/sumbulkaynat/Desktop/React/cart/src/App.js":"2","/Users/sumbulkaynat/Desktop/React/cart/src/CartItem.js":"3","/Users/sumbulkaynat/Desktop/React/cart/src/Cart.js":"4","/Users/sumbulkaynat/Desktop/React/cart/src/Navbar.js":"5"},{"size":221,"mtime":1611164507867,"results":"6","hashOfConfig":"7"},{"size":184,"mtime":1611503835804,"results":"8","hashOfConfig":"7"},{"size":1898,"mtime":1611504949271,"results":"9","hashOfConfig":"7"},{"size":2405,"mtime":1611502615311,"results":"10","hashOfConfig":"7"},{"size":938,"mtime":1611504951083,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1mtnk34",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sumbulkaynat/Desktop/React/cart/src/index.js",[],["24","25"],"/Users/sumbulkaynat/Desktop/React/cart/src/App.js",[],"/Users/sumbulkaynat/Desktop/React/cart/src/CartItem.js",["26"],"import React from \"react\";\n\nclass CartItem extends React.Component {\n\n    render () {\n        const { price , title , qty } = this.props.product ;\n        const {\n            product ,\n            onIncreaseQuantity ,\n            onDecreaseQuantity ,\n            onDeleteProduct \n        } = this.props;\n        return(\n            <div className=\"cart-item\">\n                <div className=\"left-block\">\n                    <img style={styles.image} />\n                </div>\n                <div className=\"right-block\">\n                    <div style={ { fontSize: 25 } }>{title}</div>\n                    <div style={ { color: '#777' } }>Rs: {price}</div>\n                    <div style={ { color: '#777' } }>Qty: {qty}</div>\n                    \n                    <div className=\"cart-item-actions\">\n                        {/* Buttons */}\n                        <img \n                            alt=\"increase\" \n                            className=\"action-icons\" \n                            src=\"https://www.flaticon.com/premium-icon/icons/svg/3114/3114793.svg\" \n                            onClick={ () => onIncreaseQuantity(product) }\n                        />\n                        <img \n                            alt=\"decrease\" \n                            className=\"action-icons\" \n                            src=\"https://www.flaticon.com/premium-icon/icons/svg/2985/2985073.svg\" \n                            onClick={ () => onDecreaseQuantity(product) }\n                        />\n                        <img \n                            alt=\"delete\" \n                            className=\"action-icons\" \n                            src=\"https://www.flaticon.com/premium-icon/icons/svg/2874/2874796.svg\" \n                            onClick={ () => onDeleteProduct(product.id) }\n\n                        />\n                    </div>\n                \n                </div>\n                \n\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    image: {\n        height: 124,\n        width: 124,\n        borderRadius: 4,\n        background: '#ccc'\n    }\n}\n\nexport default CartItem;","/Users/sumbulkaynat/Desktop/React/cart/src/Cart.js",[],"/Users/sumbulkaynat/Desktop/React/cart/src/Navbar.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":16,"column":21,"nodeType":"33","endLine":16,"endColumn":49},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]